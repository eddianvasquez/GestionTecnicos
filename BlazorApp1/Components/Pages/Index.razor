@page "/tecnicos"

@inject IJSRuntime JS

@using BlazorApp1.Components.models;
@using BlazorApp1.Components.services
@using BlazorApp1.Components.services
@inject TecnicosService TecnicosService

<h3>Listado de Técnicos</h3>

@if (tecnicos is null)
{
    <p><em>Cargando...</em></p>
}
else if (tecnicos.Count == 0)
{
    <p><strong>No hay técnicos registrados.</strong></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Sueldo por hora</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tecnico in tecnicos)
            {
                <tr>
                    <td>@tecnico.Nombres</td>
                    <td>@tecnico.SueldoHora.ToString("C")</td>
                    <td>
                        <a class="btn btn-warning btn-sm" href="/tecnicos/edit/@tecnico.TecnicoId">Editar</a>
                        <button class="btn btn-danger btn-sm" @onclick="@(() => Eliminar(tecnico.TecnicoId))">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Tecnico> tecnicos = new();

    protected override async Task OnInitializedAsync()
    {
        tecnicos = await TecnicosService.GetTecnicos();
    }

    async Task Eliminar(int id)
    {
        bool confirmado = await JS.InvokeAsync<bool>("confirm", "¿Estás seguro de eliminar?");
        if (confirmado)
        {
            await TecnicosService.Eliminar(id);
            tecnicos = await TecnicosService.GetTecnicos();
        }
    }
}